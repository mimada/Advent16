#
# Mikael Martensson
# http://adventofcode.com/2017/day/3
#

class SpiralMemory:
#     def __init__(self):
#         pass
    
    def getSteps1(self, data):
        counter = 1
        sideLength = 1
        sideStep = 0
        steps = 0
        
        while counter < data:
            steps = steps + 1
            sideLength = (steps * 2 + 1)
            counter = sideLength ** 2
        
        print steps, counter, sideLength
        
        if sideLength > 1:
            sideStep = ((counter - data) % (sideLength - 1)) - (sideLength - 1)/2
        
        
        return steps + abs(sideStep)
    
    def getValue(self):
        
        # 99 98 97 96 95 94 93 92 91 90
        # 64 63 62 61 60 59 58 57 56 89
        # 65 36 35 34 33 32 31 30 55 88
        # 66 37 16 15 14 13 12 29 54 87
        # 67 38 17  4  3  2 11 28 53 86
        # 68 39 18  5  0  1 10 27 52 85
        # 69 40 19  6  7  8  9 26 51 84
        # 70 41 20 21 22 23 24 25 50 83
        # 71 42 43 44 45 46 47 48 49 82
        # 71 73 74 75 76 77 78 79 80 81 
        
        pa = {1:[0], 2:[0, 1], 3:[0, 1, 2], 4:[0, 3], 5:[0, 3, 4], 6:[0, 5], 7:[0, 1, 5, 6], 8:[0, 1, 7], 9:[1, 8], 10:[1, 2, 8, 9], 
              11:[1, 2, 10], 12:[2, 11], 13:[2, 3, 11, 12], 14:[2, 3, 4, 13], 15:[3, 4, 14], 16:[4, 15], 17:[4, 5, 15, 16], 18:[4, 5, 6, 17], 
              19:[5, 6, 18], 20:[6, 19], 21:[6, 7, 19, 20], 22:[6, 7, 8, 21], 23:[7, 8, 9, 22], 24:[8, 9, 23], 25:[9, 24], 26:[9, 10, 24, 25], 
              27:[9, 10, 11, 26], 28:[10, 11, 12, 27], 29:[11, 12, 28], 30:[12, 29], 31:[12, 13, 29, 30], 32:[12, 13, 14, 31], 33:[13, 14, 15, 32], 
              34:[14, 15, 16, 33], 35:[15, 16, 34], 36:[16, 35], 37:[16, 17, 35, 36], 38:[16, 17, 18, 37], 39:[17, 18, 19, 38], 40:[18, 19, 20, 39], 
              41:[19, 20, 40], 42:[20, 41], 43:[20, 21, 41, 42], 44:[20, 21, 22, 43], 45:[21, 22, 23, 44], 46:[22, 23, 24, 45], 47:[23, 24, 25, 46], 
              48:[24, 25, 47], 49:[25, 48], 50:[25, 26, 48, 49], 51:[25, 26, 27, 50], 52:[26, 27, 28, 51], 53:[27, 28, 29, 52], 54:[28, 29, 30, 53], 
              55:[29, 30, 54], 56:[30, 55], 57:[30, 31, 55, 56], 58:[30, 31, 32, 57], 59:[31, 32, 33, 58], 60:[32, 33, 34, 59], 61:[33, 34, 35, 60]
             }
        
        a = []
        a.append(1)
        
        pak = pa.keys()
        pak.sort()
        for k in pak:
            v = 0
            for i in pa[k]:
                v = v + a[i]
            a.append(v)
            if v > 289326:
                break
        print a
        
    
def main():
    print('Start Inverse Captcha')
    
#     dataArray = [1, 12, 23, 1024]
    dataArray = [1, 12, 23, 1024, 289326]
    
    ic = SpiralMemory()
    
    for inp in dataArray:
        print 'Spiral Memory a: {0} givs {1} steps'.format(inp, ic.getSteps1(inp))
    
    ic.getValue()
    

if __name__ == '__main__':
    main()